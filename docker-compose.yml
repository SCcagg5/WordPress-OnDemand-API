version: '3'
networks:
   back-net:
     driver: bridge
   proxy:
     driver: bridge

services:
   datab:
     build: ./db
     container_name: datab
     restart: always
     networks:
       - back-net
     volumes:
       - ./db/db:/var/lib/mysql
     environment:
       MYSQL_RANDOM_ROOT_PASSWORD: 1
       MYSQL_USER: wpapi
       MYSQL_DATABASE: wpapi
       MYSQL_PASSWORD: 1q2W3e4R

   bck-end:
     build: ./api
     container_name: bck-end
     tty: true
     privileged: true
     stdin_open: true
     depends_on:
       - datab
     networks:
       - back-net
       - proxy
     volumes:
       - ./api:/home/api/
       - ./wordpress/src:/srv/src/
       - ./wordpress/data:/srv/www/
       - ./wordpress/project:/wordpress/
       - /var/run/docker.sock:/var/run/docker.sock
       - /usr/bin/docker-compose:/usr/bin/docker-compose
       - /usr/bin/docker:/usr/bin/docker
     environment:
       VIRTUAL_HOST: api.${DOMAIN}
       VIRTUAL_PORT: 8080
       LETSENCRYPT_HOST: api.${DOMAIN}
       LETSENCRYPT_EMAIL: ${EMAIL}
       API_MOD: ${API_MOD}


   front-adm:
     image: phpmyadmin/phpmyadmin
     container_name: phpmyadmin
     environment:
       - PMA_ARBITRARY=1
     restart: always
     ports:
       - 80
     volumes:
       - /sessions
     depends_on:
       - datab
     links:
       - datab:db
     networks:
       - back-net
       - proxy
     environment:
       VIRTUAL_HOST: sql.${DOMAIN}
       VIRTUAL_PORT: 80
       LETSENCRYPT_HOST: sql.${DOMAIN}
       LETSENCRYPT_EMAIL: ${EMAIL}

   webapp:
      image: nginx
      container_name: webapp
      restart: always
      ports:
        - 80
      volumes:
            - "./webapp:/usr/share/nginx/html"
            - "./conf/webapp.conf:/etc/nginx/conf.d/default.conf:ro"
      links:
        - error
      networks:
        - proxy
      environment:
        VIRTUAL_HOST: dashboard.${DOMAIN}
        VIRTUAL_PORT: 80
        LETSENCRYPT_HOST: dashboard.${DOMAIN}
        LETSENCRYPT_EMAIL: ${EMAIL}


   error:
      image: nginx
      container_name: error
      restart: always
      ports:
        - 80
      volumes:
            - "./errorpages:/usr/share/nginx/html"
            - "./conf/error.conf:/etc/nginx/conf.d/default.conf:ro"
      networks:
        - proxy

   nginx:
      image: jwilder/nginx-proxy:alpine
      container_name: nginx
      restart: always
      labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
      ports:
        - 80:80
        - 8080:443
      volumes:
        - /srv/nginx/data/certs:/etc/nginx/certs:ro
        - ./nginx/conf/:/etc/nginx/conf.d
        - ./nginx/vhost/:/etc/nginx/vhost.d
        - /srv/nginx/data/html:/usr/share/nginx/html
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - ./nginx/logs:/var/log/nginx/
      networks:
        - proxy

   letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      container_name: letsencrypt
      volumes:
        - /srv/nginx/data/vhost.d:/etc/nginx/vhost.d
        - /srv/nginx/data/certs:/etc/nginx/certs:rw
        - /srv/nginx/data/html:/usr/share/nginx/html
        - /var/run/docker.sock:/var/run/docker.sock:ro
      depends_on:
        - nginx
      networks:
        - proxy

volumes:
  db:
